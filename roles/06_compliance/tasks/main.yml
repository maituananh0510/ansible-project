---
# ===============================================================
# Role: 06_compliance
# Purpose: Verify compliance & generate audit evidence for PCI-DSS / DCI-PSS
# Components: Service checks, permission validation, config audit, evidence report
# ===============================================================

# ---------------------------
# PH·∫¶N 1: Ki·ªÉm tra tr·∫°ng th√°i d·ªãch v·ª• b·∫£o m·∫≠t
# ---------------------------
- name: Gather service facts
  ansible.builtin.service_facts:
  tags: [compliance, services]

- name: Verify security services are active
  ansible.builtin.assert:
    that:
      - "'auditd.service' in ansible_facts.services"
      - ansible_facts.services['auditd.service'].state == "running"
      - ansible_facts.services['fail2ban.service'].state == "running"
      - ansible_facts.services['rsyslog.service'].state == "running"
      - ansible_facts.services['geth.service'].state == "running"
    fail_msg: "M·ªôt ho·∫∑c nhi·ªÅu d·ªãch v·ª• b·∫£o m·∫≠t ch∆∞a ho·∫°t ƒë·ªông!"
    success_msg: "T·∫•t c·∫£ d·ªãch v·ª• b·∫£o m·∫≠t ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng."
  tags: [compliance, services]


# ---------------------------
# PH·∫¶N 2: Ki·ªÉm tra c·∫•u h√¨nh SSH Hardening
# ---------------------------
- name: Check SSH configuration for compliance
  ansible.builtin.shell: |
    grep -E "^(PermitRootLogin|PasswordAuthentication|AllowGroups)" /etc/ssh/sshd_config
  register: ssh_conf_check
  changed_when: false
  tags: [compliance, ssh]

- name: Validate SSH configuration parameters
  ansible.builtin.assert:
    that:
      - "'PermitRootLogin no' in ssh_conf_check.stdout"
      - "'PasswordAuthentication no' in ssh_conf_check.stdout"
    fail_msg: "SSH ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh an to√†n!"
    success_msg: "SSH c·∫•u h√¨nh tu√¢n th·ªß (root login & password auth disabled)."
  tags: [compliance, ssh]


# ---------------------------
# PH·∫¶N 3: Ki·ªÉm tra quy·ªÅn truy c·∫≠p th∆∞ m·ª•c nh·∫°y c·∫£m
# ---------------------------
- name: Check sensitive directories permissions
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - /var/lib/geth
    - /var/backups/geth
  register: sensitive_dirs
  tags: [compliance, permissions]

- name: Validate permissions on sensitive directories
  ansible.builtin.assert:
    that:
      - item.stat.pw_name in ["root", "geth"]
      - item.stat.mode | int(base=8) <= 750
    fail_msg: "Th∆∞ m·ª•c {{ item.stat.path }} c√≥ quy·ªÅn truy c·∫≠p qu√° r·ªông!"
    success_msg: "Th∆∞ m·ª•c {{ item.stat.path }} b·∫£o m·∫≠t ƒë√∫ng chu·∫©n."
  loop: "{{ sensitive_dirs.results }}"
  loop_control:
    label: "{{ item.stat.path }}"
  tags: [compliance, permissions]


# ---------------------------
# PH·∫¶N 4: Ki·ªÉm tra cron backup & log
# ---------------------------
- name: Check if backup cron job exists
  ansible.builtin.stat:
    path: /etc/cron.d/geth-backup
  register: cron_exists
  tags: [compliance, backup]

- name: Assert cron backup file presence
  ansible.builtin.assert:
    that:
      - cron_exists.stat.exists
    fail_msg: "Cron backup ch∆∞a ƒë∆∞·ª£c thi·∫øt l·∫≠p!"
    success_msg: "Cron backup t·ªìn t·∫°i."
  tags: [compliance, backup]

# T√¨m file log C≈® h∆°n 1 ng√†y (ƒë·ªÉ fail n·∫øu c√≥)
- name: Verify if any backup log older than 1 day exists
  ansible.builtin.find:
    paths: /var/backups/geth
    patterns: "backup.log"
    age_stamp: mtime
    age: 1d
  register: old_backup_logs
  tags: [compliance, backup]

# N·∫øu KH√îNG c√≥ log c≈© ‚Üí PASS (nghƒ©a l√† log ƒë∆∞·ª£c c·∫≠p nh·∫≠t trong v√≤ng 24h)
- name: Assert backup log is fresh (within last 24h)
  ansible.builtin.assert:
    that:
      - old_backup_logs.matched == 0
    fail_msg: "Log backup kh√¥ng ƒë∆∞·ª£c c·∫≠p nh·∫≠t trong 24h qua!"
    success_msg: "Log backup m·ªõi nh·∫•t trong v√≤ng 24h."
  tags: [compliance, backup]



# ---------------------------
# PH·∫¶N 5: Sinh b√°o c√°o ki·ªÉm th·ª≠ tu√¢n th·ªß
# ---------------------------
- name: Create compliance report directory
  ansible.builtin.file:
    path: /var/log/compliance
    state: directory
    mode: '0750'
  tags: [compliance, report]

- name: Generate compliance summary report
  ansible.builtin.copy:
    dest: /var/log/compliance/compliance_report.txt
    mode: '0640'
    content: |
      ======================================================
      üßæ PCI-DSS Compliance Verification Report
      Host: {{ inventory_hostname }}
      Date: {{ ansible_date_time.date }} {{ ansible_date_time.time }}
      ======================================================

      D·ªãch v·ª• b·∫£o m·∫≠t: OK
      SSH c·∫•u h√¨nh an to√†n: OK
      Ph√¢n quy·ªÅn th∆∞ m·ª•c nh·∫°y c·∫£m: OK
      Cron backup & log: OK

      [Auto-generated by Role: 07_compliance]
  tags: [compliance, report]

