---
# =========================================================
# ROLE: 02_HARDENING
# Mục tiêu: Bảo mật hệ điều hành chứa Geth node
# Bao gồm: User/Auth, SSH, Firewall, Kernel Hardening, 2FA
# Phù hợp PCI-DSS Req 1, 2, 6, 8, 10, 11
# =========================================================

# ---------------------- USER & AUTH ----------------------
- name: Lock the root account password
  ansible.builtin.user:
    name: root
    password_lock: yes
  tags: [hardening, users]
  # → Vô hiệu hoá đăng nhập trực tiếp bằng root qua SSH (PCI Req 8.1.4)

- name: Create a dedicated sudoers group
  ansible.builtin.group:
    name: "{{ privileged_group }}"
    state: present
  tags: [hardening, users]
  
  # Cho phép nhóm devops dùng sudo không cần mật khẩu
- name: Allow 'devops' group to use NOPASSWD sudo
  ansible.builtin.copy:
    dest: /etc/sudoers.d/devops
    content: |
      %devops ALL=(ALL) NOPASSWD:ALL
    owner: root
    group: root
    mode: '0440'
  tags: [hardening, sudoers]
  
  # → Tạo nhóm quản trị (VD: devops) thay cho root để kiểm soát đặc quyền

- name: Allow '{{ privileged_group }}' to use NOPASSWD sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/90-privileged-group
    line: '%{{ privileged_group }} ALL=(ALL) NOPASSWD: ALL'
    mode: '0440'
    create: yes
    validate: 'visudo -cf %s'
  tags: [hardening, users]
  # → Cho phép nhóm đặc quyền dùng sudo mà không cần mật khẩu
  #   (có thể thay đổi thành có mật khẩu nếu chính sách yêu cầu)

- name: Add ansible user to sudo group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: "{{ privileged_group }}"
    append: yes
  tags: [hardening, users]
  # → Thêm user ansible vào nhóm sudo để có quyền triển khai

- name: Install PAM password quality tools
  ansible.builtin.apt:
    name: libpam-pwquality
    state: present
  tags: [hardening, users]
  # → Cài gói kiểm soát độ mạnh mật khẩu (pam_pwquality)

- name: Enforce password policy (minlen=12, retry=3)
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-password
    regexp: '^password\s+requisite\s+pam_pwquality.so'
    line: 'password requisite pam_pwquality.so retry=3 minlen=12'
    backrefs: yes
  tags: [hardening, users]
  # → Bắt buộc mật khẩu tối thiểu 12 ký tự, cho phép nhập sai tối đa 3 lần

- name: Enforce password rotation (90 days)
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^\s*#?PASS_MAX_DAYS'
    line: 'PASS_MAX_DAYS   90'
    insertafter: EOF
  tags: [hardening, users]
  # → Giới hạn thời gian sử dụng mật khẩu tối đa 90 ngày (PCI Req 8.2.4)

- name: Apply password expiry policy for existing users
  ansible.builtin.command: chage --maxdays 90 --warndays 7 "{{ item }}"
  loop:
    - "{{ ansible_user }}"
    - "geth"
  when: ansible_user != 'root'
  tags: [hardening, users]
  # → Cập nhật chính sách cho người dùng hiện có (Ansible + Geth)

# ---------------------- SSH HARDENING ----------------------
- name: Configure secure SSH settings
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?{{ item.key }}"
    line: "{{ item.key }} {{ item.value }}"
    validate: 'sshd -t -f %s'
  loop:
    - { key: 'Protocol', value: '2' }
    - { key: 'PermitRootLogin', value: 'no' }
    - { key: 'PasswordAuthentication', value: 'no' }
    - { key: 'AllowGroups', value: '{{ privileged_group }}' }
  notify: Restart ssh
  tags: [hardening, ssh]
  # → Cấu hình SSH theo chuẩn an toàn:
  #   - Protocol 2
  #   - Cấm root login
  #   - Cấm password login (chỉ dùng SSH key)
  #   - Giới hạn nhóm được phép SSH

# ---------------------- FIREWALL ----------------------
- name: Install UFW
  ansible.builtin.apt:
    name: ufw
    state: present
  tags: [hardening, firewall]
  # → Cài đặt tường lửa UFW (Uncomplicated Firewall)

- name: Reset UFW rules to defaults
  community.general.ufw:
    state: reset
  tags: [hardening, firewall]
  # → Đặt lại cấu hình firewall về mặc định

- name: Set default UFW policies (deny incoming, allow outgoing)
  community.general.ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  tags: [hardening, firewall]

- name: Allow essential ports (SSH + Geth RPC)
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: tcp
    src: "{{ item.src | default('any') }}"
    comment: "{{ item.comment }}"
  loop:
    - { port: '22', comment: 'Allow SSH' }
    - { port: '8545', src: '{{ trusted_controller_ip }}', comment: 'Allow Geth RPC from Controller' }
  tags: [hardening, firewall]

- name: Enable UFW
  community.general.ufw:
    state: enabled
  tags: [hardening, firewall]
  # → Bật firewall để chặn truy cập trái phép (PCI Req 1)

# ---------------------- KERNEL HARDENING ----------------------
- name: Apply kernel hardening parameters
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/99-hardening.conf
    state: present
    reload: yes
  loop:
    - { key: 'net.ipv4.ip_forward', value: '0' }
    - { key: 'net.ipv4.conf.all.rp_filter', value: '1' }
    - { key: 'net.ipv4.conf.default.rp_filter', value: '1' }
    - { key: 'net.ipv4.tcp_syncookies', value: '1' }
    - { key: 'fs.protected_hardlinks', value: '1' }
    - { key: 'fs.protected_symlinks', value: '1' }
    - { key: 'kernel.dmesg_restrict', value: '1' }
  tags: [hardening, kernel]
  # → Tăng cường bảo mật kernel & network stack (PCI Req 2.2)

# ---------------------- 2FA CONFIGURATION ----------------------
- name: Install Google Authenticator PAM module
  ansible.builtin.apt:
    name: libpam-google-authenticator
    state: present
  tags: [hardening, ssh, 2fa]

- name: Enable PAM for SSH 2FA
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sshd
    line: 'auth required pam_google_authenticator.so'
    insertafter: '^@include common-auth'
  tags: [hardening, ssh, 2fa]
  # → Thêm 2FA vào PAM để yêu cầu OTP khi SSH (PCI Req 8.3)

- name: Enable ChallengeResponseAuthentication in sshd_config
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?ChallengeResponseAuthentication'
    line: 'ChallengeResponseAuthentication yes'
    validate: 'sshd -t -f %s'
  notify: Restart ssh
  tags: [hardening, ssh, 2fa]

- name: Display 2FA setup reminder
  ansible.builtin.debug:
    msg: |
      [NOTICE] PAM 2FA is now enabled.
      Each user (e.g., {{ ansible_user }}) must run 'google-authenticator' 
      on the Geth node to initialize their own OTP key.
  tags: [hardening, ssh, 2fa]

